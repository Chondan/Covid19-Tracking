(this["webpackJsonpcovid19-tracker"]=this["webpackJsonpcovid19-tracker"]||[]).push([[0],{101:function(e,t,r){e.exports=r(224)},107:function(e){e.exports=JSON.parse('{"countriesRoute":{"Name":"Get List Of Countries","Description":"Returns all countries and associated provinces. The country_slug variable is used for country specific data","Path":"/countries"},"countryDayOneRoute":{"Name":"Get List Of Cases Per Country Per Province By Case Type From The First Recorded Case","Description":"Returns all cases by case type for a country from the first recorded case. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/dayone/country/:country"},"countryDayOneTotalRoute":{"Name":"Get List Of Cases Per Country By Case Type From The First Recorded Case","Description":"Returns all cases by case type for a country from the first recorded case. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/total/dayone/country/:country"},"countryRoute":{"Name":"Get List Of Cases Per Country Per Province By Case Type","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/country/:country"},"countryRoutePremium":{"Name":"Premium Data: Get List Of Cases Per Country By Case Type","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/premium/country/:country"},"countryRoutePremiumData":{"Name":"Premium Data: Get Data Per Country","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/premium/country/data/:country"},"countryStatusDayOneLiveRoute":{"Name":"Get List Of Cases Per Country Per Province By Case Type From The First Recorded Case, updated with latest live count","Description":"Returns all cases by case type for a country from the first recorded case with the latest record being the live count. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/dayone/country/:country/status/:status/live"},"countryStatusDayOneRoute":{"Name":"Get List Of Cases Per Country Per Province By Case Type From The First Recorded Case","Description":"Returns all cases by case type for a country from the first recorded case. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/dayone/country/:country/status/:status"},"countryStatusDayOneTotalRoute":{"Name":"Get List Of Cases Per Country By Case Type From The First Recorded Case","Description":"Returns all cases by case type for a country from the first recorded case. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/total/dayone/country/:country/status/:status"},"countryStatusLiveRoute":{"Name":"Daily list of cases per Country per Province by Case Type, updated with latest live count","Description":"Returns all cases by case type for a country with the latest record being the live count. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/country/:country/status/:status/live"},"countryStatusRoute":{"Name":"Get List Of Cases Per Country Per Province By Case Type","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/country/:country/status/:status"},"countryStatusTotalRoute":{"Name":"Get List Of Cases Per Country By Case Type","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/total/country/:country/status/:status"},"countrySummaryRoutePremium":{"Name":"Premium Data: Get Summary Of World Case Data","Description":"Returns summary of all country data","Path":"/premium/summary"},"countryTestingPremium":{"Name":"Premium Data: Get Testing Data Per Country","Description":"Get data around testing","Path":"/premium/country/testing/:country"},"countryTotalRoute":{"Name":"Get List Of Cases Per Country By Case Type","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/total/country/:country"},"exportRoute":{"Name":"Get All Data as a zip file","Description":"Returns all data in the system, compressed as a zip file. Warning: this request returns 8MB+ and takes 5+ seconds","Path":"/export"},"liveCountryRoute":{"Name":"Get Live List Of Cases Per Country Per Province By Case Type","Description":"Returns all live cases by case type for a country. These records are pulled every 10 minutes and are ungrouped. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/live/country/:country"},"liveCountryStatusAfterDateRoute":{"Name":"Get a Time Series Of Cases Per Country Per Province By Case Type After A Date","Description":"Returns all live cases by case type for a country after a given date. These records are pulled every 10 minutes and are ungrouped. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/live/country/:country/status/:status/date/:date"},"liveCountryStatusRoute":{"Name":"Get a time series Of Cases Per Country Per Province By Case Type","Description":"Returns all live cases by case type for a country. These records are pulled every 10 minutes and are ungrouped. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/live/country/:country/status/:status"},"summaryRoute":{"Name":"Summary of new and total cases per country","Description":"A summary of new and total cases per country","Path":"/summary"},"travelAdvicePremium":{"Name":"Premium Data: Travel information for a given country","Description":"Returns all cases by case type for a country. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths","Path":"/premium/travel/country/:country"},"webhookRoute":{"Name":"Add a webhook to be notified when new data becomes available","Description":"POST Request must be in JSON format with key URL and the value of the webhook. Response data is the same as returned from /summary","Path":"/webhook"}}')},224:function(e,t,r){"use strict";r.r(t);var a=r(0),n=r.n(a),o=r(7),s=r.n(o),c=r(18),u=r.n(c),i=r(31),y=r(83),l=r(84),m=r(95),d=r(94);function f(e,t){var a=r(107),n="".concat("https://api.covid19api.com").concat(a[e].Path);if(t){var o=/:\w+/;return t.forEach((function(e){n=n.replace(o,e)})),n}}var p=r(251),h=r(255),C=r(256),v=r(257),b=r(85),D=r.n(b),P=r(56),E=r.n(P),R=r(44),T=r.n(R);function _(e){var t=e.type,r=e.data,a=r[0]&&n.a.createElement(E.a,{start:0,end:r[0],duration:2.5,separator:","});return n.a.createElement(p.a,{item:!0,component:h.a,xs:12,md:2,className:D()(T.a.card,T.a["".concat(t.toLowerCase())])},n.a.createElement(C.a,null,n.a.createElement(v.a,{color:"textSecondary",gutterBottom:!0},t),n.a.createElement(v.a,{variant:"h5"},n.a.createElement(E.a,{start:0,end:r[1],duration:2.5,separator:","})),n.a.createElement(v.a,{variant:"subtitle1"},r[0]?"+":"",a),n.a.createElement(v.a,{color:"textSecondary"},r[2]),n.a.createElement(v.a,{variant:"body2"},"Number of ",t.toLowerCase()," cases of COVID-19")))}var g={INFECTED:"INFECTED",RECOVERED:"RECOVERED",ACTIVE:"ACTIVE",DEATHS:"DEATHS"};function N(e){if(!e.selectedData)return n.a.createElement("div",null,"...Loading");var t=e.selectedData,r=t.NewConfirmed,a=t.TotalConfirmed,o=t.NewDeaths,s=t.TotalDeaths,c=t.NewRecovered,u=t.TotalRecovered,i=new Date,y=e.selectedData.Date&&new Date(e.selectedData.Date).toDateString()||i.toDateString();return n.a.createElement("div",{className:T.a.container},n.a.createElement(p.a,{container:!0,spacing:3,justify:"center"},Object.keys(g).map((function(e){var t=null;switch(e){case g.INFECTED:return t=[r,a,y],n.a.createElement(_,{key:g.INFECTED,type:g.INFECTED,data:t});case g.RECOVERED:return t=[c,u,y],n.a.createElement(_,{key:g.RECOVERED,type:g.RECOVERED,data:t});case g.DEATHS:return t=[o,s,y],n.a.createElement(_,{key:g.DEATHS,type:g.DEATHS,data:t});case g.ACTIVE:return t=[!1,a-u,y],n.a.createElement(_,{key:g.ACTIVE,type:g.ACTIVE,data:t});default:return!1}}))))}var O=r(90),k=r(91),w=r.n(k),S="Confirmed",G="Active",x="Recovered",A="Deaths",L="Date";function B(e){var t=e.chartData;e.state;if(!t)return n.a.createElement("div",null,"...Loading");function r(e,r){if(t){var a=t.length;return a<r?t.map((function(t){return t[e]})):t.map((function(t){return t[e]})).slice(a-r,a)}}var a=r(G,30),o=r(x,30),s=r(L,30),c=r(A,30),u=r(S,30);return n.a.createElement("div",{className:w.a["line-chart-container"]},n.a.createElement(O.Line,{options:{title:{display:!0,text:"COVID19"}},data:{labels:s.map((function(e){return new Date(e).toDateString()})),datasets:[{data:a,label:"Active",borderColor:"#33f",fill:!0},{data:o,label:"Recovered",borderColor:"lightgreen",fill:!0},{data:c,label:"Deaths",borderColor:"red",fill:!0},{data:u,label:"Confirmed",borderColor:"yellow",fill:!0}]}}))}var F=r(45),I=r.n(F),V=r(258),j=r(259),H=r(260);function J(e){var t=e.countries,r=e.handleSelectedCountry,a=e.country;return n.a.createElement("div",{className:I.a.container},n.a.createElement(V.a,{className:I.a["country-picker-form"]},n.a.createElement(j.a,{className:I.a["country-picker"],value:a,onChange:function(e){return r(e.target.value)}},n.a.createElement(H.a,{key:"Global"+Date.now(),value:"Global"},"Global"),t&&t.map((function(e){return n.a.createElement(H.a,{key:e.Country+Date.now(),value:e.Slug},e.Country)})))))}var q=r(92),M=r.n(q),W=r(93),z=r.n(W),K=function(){var e=Object(i.a)(u.a.mark((function e(t){var r,a;return u.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,z.a.get(t);case 3:return r=e.sent,a=r.data,e.abrupt("return",a);case 8:e.prev=8,e.t0=e.catch(0),console.error(e.t0);case 11:case"end":return e.stop()}}),e,null,[[0,8]])})));return function(t){return e.apply(this,arguments)}}(),Q=f("summaryRoute",[]),U=function(e){Object(m.a)(r,e);var t=Object(d.a)(r);function r(){var e;Object(y.a)(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return(e=t.call.apply(t,[this].concat(n))).state={data:null,selectedData:null,country:"Global",chartData:null},e}return Object(l.a)(r,[{key:"componentDidMount",value:function(){var e=Object(i.a)(u.a.mark((function e(){var t;return u.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,K(Q);case 2:if(t=e.sent,K){e.next=5;break}return e.abrupt("return");case 5:this.setState({data:t,selectedData:t.Global});case 6:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"handleSelectedCountry",value:function(){var e=Object(i.a)(u.a.mark((function e(t){var r,a,n,o,s;return u.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.state.data){e.next=2;break}return e.abrupt("return");case 2:if(r=this.state.data,a=r.Countries,n=r.Global,"Global"!==t){e.next=5;break}return e.abrupt("return",this.setState({selectedData:n,chartData:null}));case 5:if(o=a.find((function(e){return e.Slug===t})),"united-states"!==t){e.next=9;break}return this.setState({chartData:null,selectedData:o,country:t}),e.abrupt("return");case 9:return e.next=11,K(f("countryDayOneRoute",[t]));case 11:s=e.sent,this.setState({chartData:s,selectedData:o,country:t});case 13:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"render",value:function(){var e=this.state,t=e.data,r=e.selectedData,a=e.chartData,o=e.country;return console.log(a),n.a.createElement("div",{className:M.a.container},n.a.createElement(J,{country:o,handleSelectedCountry:this.handleSelectedCountry.bind(this),countries:t&&t.Countries}),n.a.createElement(N,{selectedData:r}),n.a.createElement(B,{chartData:a,state:this.state}))}}]),r}(n.a.Component);s.a.render(n.a.createElement(U,null),document.getElementById("root"))},44:function(e,t,r){e.exports={container:"card_container__3G4Fa",card:"card_card__1py-W",infected:"card_infected__28vHw",recovered:"card_recovered__2EHfA",deaths:"card_deaths__2It-S",active:"card_active__1IQg3"}},45:function(e,t,r){e.exports={container:"countryPicker_container__2TsEM","country-picker":"countryPicker_country-picker__3dZsq","country-picker-form":"countryPicker_country-picker-form__oOk-4"}},91:function(e,t,r){e.exports={"line-chart-container":"chart_line-chart-container__1HYan"}},92:function(e,t,r){e.exports={container:"app_container__2JKVN"}}},[[101,1,2]]]);
//# sourceMappingURL=main.a20874bc.chunk.js.map