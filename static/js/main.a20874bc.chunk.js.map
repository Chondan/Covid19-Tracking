{"version":3,"sources":["utils/getApiUrl.js","components/card/card.js","components/chart/chart.js","components/countryPicker/countryPicker.js","api/index.js","app.js","index.js","components/card/card.module.css","components/countryPicker/countryPicker.module.css","components/chart/chart.module.css","app.module.css"],"names":["getApiUrl","type","array","apiPath","require","apiUrl","Path","regex","forEach","variable","replace","StatusCard","data","updated","start","end","duration","separator","Grid","item","component","Card","xs","md","className","cx","styles","card","toLowerCase","CardContent","Typography","color","gutterBottom","variant","TYPES","INFECTED","RECOVERED","ACTIVE","DEATHS","Cards","props","selectedData","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","today","Date","date","toDateString","container","spacing","justify","Object","keys","map","key","Chart","chartData","state","getDataSet","size","dataLength","length","slice","activeDataArray","recoveredDataArray","dateDataArray","deathsDataArray","confirmedDataArray","options","title","display","text","labels","datasets","label","borderColor","fill","CountryPicker","countries","handleSelectedCountry","country","FormControl","Select","value","onChange","e","target","MenuItem","now","countryObj","Country","Slug","fetchData","a","axios","get","console","error","App","fetchedData","this","setState","Global","country_slug","Countries","selectedCountry","find","log","bind","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a20874bc.chunk.js","sourcesContent":["export function getApiUrl(type, array) {\n    // api url \n    const requestUrl = \"https://api.covid19api.com\";\n    const apiPath = require(\"../api/apiRoute.json\");\n    let apiUrl = `${requestUrl}${apiPath[type].Path}`;\n    // regular expression to search for ':word'\n    if (!array) { return; }\n    const regex = /:\\w+/;\n    // inject variable into apiUrl by replacing matched value to value in array\n    array.forEach(variable => {\n        apiUrl = apiUrl.replace(regex, variable);\n    });\n    return apiUrl;\n}\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport cx from 'classnames';\nimport CountUp from 'react-countup';\nimport styles from './card.module.css';\n\nfunction StatusCard({ type, data }) {\n    const updated = data[0] && (<CountUp start={0} end={data[0]} duration={2.5} separator=\",\" />);\n    return (\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles[`${type.toLowerCase()}`])}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>{type}</Typography>\n                <Typography variant=\"h5\">\n                    <CountUp start={0} end={data[1]} duration={2.5} separator=\",\" />\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                    { data[0] ? \"+\" : \"\"}{updated}\n                </Typography>\n                <Typography color=\"textSecondary\">{data[2]}</Typography>\n                <Typography variant=\"body2\">Number of {type.toLowerCase()} cases of COVID-19</Typography>\n            </CardContent>\n        </Grid>\n    );\n}\n\nconst TYPES = {INFECTED: \"INFECTED\", RECOVERED: \"RECOVERED\", ACTIVE: \"ACTIVE\", DEATHS: \"DEATHS\"};\n\nexport default function Cards(props) {\n    if (!props.selectedData) { return <div>...Loading</div>; }\n    const { NewConfirmed, TotalConfirmed, NewDeaths, TotalDeaths, NewRecovered, TotalRecovered } = props.selectedData;\n    const today = new Date();\n    const date = (props.selectedData.Date && new Date(props.selectedData.Date).toDateString()) || today.toDateString();\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                {Object.keys(TYPES).map(type => {\n                    let data = null;\n                    switch (type) {\n                        case TYPES.INFECTED:\n                            data = [NewConfirmed, TotalConfirmed, date];\n                            return <StatusCard key={TYPES.INFECTED} type={TYPES.INFECTED} data={data} />;\n                        case TYPES.RECOVERED:\n                            data = [NewRecovered, TotalRecovered, date];\n                            return <StatusCard key={TYPES.RECOVERED} type={TYPES.RECOVERED} data={data} />;\n                        case TYPES.DEATHS:\n                            data = [NewDeaths, TotalDeaths, date];\n                            return <StatusCard key={TYPES.DEATHS} type={TYPES.DEATHS} data={data} />;\n                        case TYPES.ACTIVE:\n                            data = [false, TotalConfirmed - TotalRecovered, date];\n                            return <StatusCard key={TYPES.ACTIVE} type={TYPES.ACTIVE} data={data} />;\n                        default:\n                            return false;\n                    }\n                })}\n            </Grid>\n        </div>\n    );\n}","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport styles from './chart.module.css';\n\nconst TYPES = {\n    CONFIRMED: \"Confirmed\", \n    ACTIVE: \"Active\", \n    RECOVERED: \"Recovered\", \n    DEATHS: \"Deaths\", \n    DATE: \"Date\" \n};\n\nexport default function Chart({ chartData, state }) {\n    if (!chartData) {\n        return <div>...Loading</div>;\n    }\n    // ** using array.slice(start, end);\n    // use 90 datas\n    // all data need \n    // 1. active array\n    // 2. recoverd array\n    // 3. deaths array\n    // 4. date array (label)\n    // const activeDataArray = chartData;\n    function getDataSet(type, size) {\n        if (!chartData) { return; }\n        const dataLength = chartData.length;\n        const DataArray = dataLength < size ? chartData.map(data => data[type]) : chartData.map(data => data[type]).slice(dataLength - size, dataLength);\n        return DataArray;\n    }\n    const activeDataArray = getDataSet(TYPES.ACTIVE, 30);\n    const recoveredDataArray = getDataSet(TYPES.RECOVERED, 30);\n    const dateDataArray = getDataSet(TYPES.DATE, 30);\n    const deathsDataArray = getDataSet(TYPES.DEATHS, 30);\n    const confirmedDataArray = getDataSet(TYPES.CONFIRMED, 30)\n    return (\n        <div className={styles[\"line-chart-container\"]}>\n            <Line\n                options={{\n                    title: {\n                        display: true,\n                        text: \"COVID19\"\n                    }\n                }} \n                data={{\n                    labels: dateDataArray.map(date => new Date(date).toDateString()),\n                    datasets: [\n                        {\n                            data: activeDataArray,\n                            label: \"Active\",\n                            borderColor: \"#33f\",\n                            fill: true,\n                        }, \n                        {\n                            data: recoveredDataArray,\n                            label: \"Recovered\",\n                            borderColor: \"lightgreen\",\n                            fill: true,\n                        },\n                        {\n                            data: deathsDataArray,\n                            label: \"Deaths\",\n                            borderColor: \"red\",\n                            fill: true,\n                        },\n                        {\n                            data: confirmedDataArray,\n                            label: \"Confirmed\",\n                            borderColor: \"yellow\",\n                            fill: true,\n                        }\n                    ]\n                }}\n            />\n        </div>\n    );\n}","import React from 'react';\nimport styles from './countryPicker.module.css';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\n\nexport function CountryPicker({ countries, handleSelectedCountry, country }) {\n    return (\n        <div className={styles.container}>\n            <FormControl className={styles[\"country-picker-form\"]}>\n                <Select \n                    className={styles[\"country-picker\"]} \n                    value={country}\n                    onChange={e => handleSelectedCountry(e.target.value)}\n                >\n                    <MenuItem key={\"Global\"+Date.now()} value=\"Global\">Global</MenuItem>\n                    {countries && countries.map(countryObj => (\n                        <MenuItem key={countryObj.Country+Date.now()} value={countryObj.Slug}>{countryObj.Country}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}","import axios from 'axios';\n\nexport const fetchData = async (apiUrl) => {\n    try {\n        const { data } = await axios.get(apiUrl);\n        return data;\n    } catch (error) {\n        console.error(error);\n    }\n}","import React from 'react';\nimport { getApiUrl } from './utils/getApiUrl';\nimport { Card, Chart, CountryPicker } from './components';\nimport styles from './app.module.css';\nimport { fetchData } from './api';\n\nconst apiUrl = getApiUrl(\"summaryRoute\", []);\n\nclass App extends React.Component {\n    // contructor is created automatically at the backend\n    state = {\n        data: null,\n        selectedData: null,\n        country: \"Global\",\n        chartData: null,\n    }\n    async componentDidMount() {\n        const fetchedData = await fetchData(apiUrl);\n        if (!fetchData) { return; }\n        this.setState( { data: fetchedData, selectedData: fetchedData.Global });\n    }\n    async handleSelectedCountry(country_slug) {\n        if (!this.state.data) { return; }\n        // manipulate data for showing in card\n        const { Countries, Global } = this.state.data;\n        if (country_slug === \"Global\") {\n            return this.setState({ selectedData: Global, chartData: null });\n        }\n        const selectedCountry = Countries.find(country => country.Slug === country_slug);\n        // fetch data for chart\n        if (country_slug === \"united-states\") {\n            this.setState({ chartData: null, selectedData: selectedCountry, country: country_slug });\n            return;\n        }\n        const chartData = await fetchData(getApiUrl(\"countryDayOneRoute\", [country_slug]));\n        this.setState({ chartData: chartData, selectedData: selectedCountry, country: country_slug });\n    }\n    render() {\n        const { data, selectedData, chartData, country } = this.state;\n        console.log(chartData);\n        return (\n            <div className={styles.container}>\n                <CountryPicker country={country} handleSelectedCountry={this.handleSelectedCountry.bind(this)} countries={data && data.Countries} />\n                <Card selectedData={selectedData} />\n                <Chart chartData={chartData} state={this.state} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__3G4Fa\",\"card\":\"card_card__1py-W\",\"infected\":\"card_infected__28vHw\",\"recovered\":\"card_recovered__2EHfA\",\"deaths\":\"card_deaths__2It-S\",\"active\":\"card_active__1IQg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"countryPicker_container__2TsEM\",\"country-picker\":\"countryPicker_country-picker__3dZsq\",\"country-picker-form\":\"countryPicker_country-picker-form__oOk-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line-chart-container\":\"chart_line-chart-container__1HYan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\"};"],"sourceRoot":""}